/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Organization;

import Business.Drug.Drug;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DrugWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author joseph antony
 */
public class DrugOrgAdminWorkQueueJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ScientistWorkArea
     */
    JPanel userProcessContainer;
    Organization organization;
    Enterprise enterprise;
    UserAccount userAccount;
    Ecosystem business;

    DrugOrgAdminWorkQueueJPanel(JPanel userProcessContainer, Organization organization, Enterprise enterprise, UserAccount userAccount, Ecosystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.business = business;
        for (WorkRequest request : organization.getWorkQueue().getWorkQueue()) {
            if (request.getStatus() == WorkRequest.Status.ORGANIZATION1ADMINAPPROVED) {
                request.setReceiver(userAccount);
            }
        }
        populateWorkQueueTable();
        populateDrugHistoryTable();
    }

    public void populateWorkQueueTable() {
        DefaultTableModel model = (DefaultTableModel) tblCompoundDetails.getModel();
        model.setRowCount(0);
        for (WorkRequest request : organization.getWorkQueue().getWorkQueue()) {
            Object[] row = new Object[6];
            row[0] = ((DrugWorkRequest) request).getDrug();
            row[1] = ((DrugWorkRequest) request).getCompound();
            row[2] = request.getSender() == null ? null : request.getSender().getEmployee();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee();
            row[4] = request.getStatus();
            row[5] = request;
            model.addRow(row);
        }
    }

    public void populateDrugHistoryTable() {
        DefaultTableModel model = (DefaultTableModel) tblDrugDetails.getModel();

        model.setRowCount(0);
        for (Drug drug : business.getDrugList().getDrugHistory()) {
            Object[] row = new Object[4];
            row[0] = drug;
            row[1] = drug.getMolecularFormula();
            row[2] = drug.getMolecularWeight();
            row[3] = drug.getDiscoveryDate();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblCompoundDetails = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnMessageToAdmin = new javax.swing.JButton();
        txtMessagefield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDrugDetails = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnRequestToScientist = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));

        tblCompoundDetails.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblCompoundDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug", "Compound", "Sender", "Receiver", "Status", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCompoundDetails);
        if (tblCompoundDetails.getColumnModel().getColumnCount() > 0) {
            tblCompoundDetails.getColumnModel().getColumn(0).setResizable(false);
            tblCompoundDetails.getColumnModel().getColumn(1).setResizable(false);
            tblCompoundDetails.getColumnModel().getColumn(2).setResizable(false);
            tblCompoundDetails.getColumnModel().getColumn(3).setResizable(false);
            tblCompoundDetails.getColumnModel().getColumn(4).setResizable(false);
            tblCompoundDetails.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N
        jLabel1.setText("Drug Organization Admin Work Queue");

        btnMessageToAdmin.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnMessageToAdmin.setText("Message To Admin");
        btnMessageToAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMessageToAdminActionPerformed(evt);
            }
        });

        txtMessagefield.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Message :");

        tblDrugDetails.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblDrugDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Molecular Formula", "Molecular Weight", "Discovery Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblDrugDetails);
        if (tblDrugDetails.getColumnModel().getColumnCount() > 0) {
            tblDrugDetails.getColumnModel().getColumn(0).setResizable(false);
            tblDrugDetails.getColumnModel().getColumn(1).setResizable(false);
            tblDrugDetails.getColumnModel().getColumn(2).setResizable(false);
            tblDrugDetails.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Drug Details :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Work Queue:");

        btnRequestToScientist.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnRequestToScientist.setText("Request To Scientist");
        btnRequestToScientist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestToScientistActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(436, 436, 436)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(60, 60, 60)
                                    .addComponent(txtMessagefield, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(58, 58, 58)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(btnMessageToAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnRequestToScientist))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(505, 505, 505)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(464, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRequestToScientist, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMessagefield, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMessageToAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jLabel3)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnBack)
                .addContainerGap(266, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestToScientistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestToScientistActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblCompoundDetails.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }

        if (txtMessagefield.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Message required!!");
            return;
        }
        WorkRequest request = (WorkRequest) tblCompoundDetails.getValueAt(selectedRow, 5);
        if (request.getStatus() == WorkRequest.Status.ORGANIZATION1ADMINAPPROVED) {
            request.setSender(userAccount);
            request.setReceiver(null);
            request.setStatus(WorkRequest.Status.INPROCESS);
            request.setMessage(txtMessagefield.getText());
            populateWorkQueueTable();
            JOptionPane.showMessageDialog(null, "Request sent to scientist");
        } else {
            JOptionPane.showMessageDialog(null, "Invalid selection");
        }
        txtMessagefield.setText("");

    }//GEN-LAST:event_btnRequestToScientistActionPerformed

    private void btnMessageToAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMessageToAdminActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblCompoundDetails.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }

        if (txtMessagefield.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Message required!!");
            return;
        }

        WorkRequest request = (WorkRequest) tblCompoundDetails.getValueAt(selectedRow, 5);
        if (request.getStatus() == WorkRequest.Status.APPROVED) {
            request.setSender(userAccount);
            request.setReceiver(null);
            request.setStatus(WorkRequest.Status.ORGANIZATION2ADMINAPPROVED);
            request.setMessage(txtMessagefield.getText());

            enterprise.getWorkQueue().getWorkQueue().add(request);
            populateWorkQueueTable();
            JOptionPane.showMessageDialog(null, "Request sent to R&D Enterprise Admin ");
        } else {
            JOptionPane.showMessageDialog(null, "Invalid selection");
        }
        txtMessagefield.setText("");
    }//GEN-LAST:event_btnMessageToAdminActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnMessageToAdmin;
    private javax.swing.JButton btnRequestToScientist;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblCompoundDetails;
    private javax.swing.JTable tblDrugDetails;
    private javax.swing.JTextField txtMessagefield;
    // End of variables declaration//GEN-END:variables
}
