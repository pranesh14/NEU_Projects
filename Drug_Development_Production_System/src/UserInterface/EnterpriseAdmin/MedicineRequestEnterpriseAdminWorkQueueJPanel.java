/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.EnterpriseAdmin;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Medicine.Medicine;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PurchaseOrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.WorkRequest.Status;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author joseph antony
 */
public class MedicineRequestEnterpriseAdminWorkQueueJPanel extends javax.swing.JPanel {

    public JPanel userProcessContainer;
    public Enterprise enterprise;
    public Ecosystem system;
    public UserAccount userAccount;

    /**
     * Creates new form ScientistWorkArea
     */
    public MedicineRequestEnterpriseAdminWorkQueueJPanel(JPanel userProcessContainer, Enterprise enterprise, Ecosystem system, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.system = system;
        this.userAccount = account;
        populateMedicineTable();
        populateRequestTable();
        for (WorkRequest request : enterprise.getWorkQueue().getWorkQueue()) {
            request.setReceiver(account);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblMedicineList = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnApprove = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRequestingMedicine = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));

        tblMedicineList.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblMedicineList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine", "Form", "Quantity"
            }
        ));
        jScrollPane2.setViewportView(tblMedicineList);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N
        jLabel1.setText("Production Admin Work Queue");

        btnApprove.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        tblRequestingMedicine.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblRequestingMedicine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine", "Sender", "Receiver", "Status", "Message"
            }
        ));
        jScrollPane3.setViewportView(tblRequestingMedicine);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Requested Medicine :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Medicine List:");

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(469, 469, 469)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(332, 332, 332)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(580, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(312, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        int selectedRow = tblRequestingMedicine.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request to approve", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        PurchaseOrderWorkRequest request = (PurchaseOrderWorkRequest) tblRequestingMedicine.getValueAt(selectedRow, 4);
        request.setReceiver(userAccount);

        for (Medicine med : system.getMedicineCatalog().getMedicineList()) {
            if (request.getMedicine() == med && request.getMedicineCount() <= med.getQuantity()) {
                request.setStatus(Status.APPROVED);
                request.setMessage("The medicines will be supplied");
                med.setQuantity(med.getQuantity()-request.getMedicineCount());
                JOptionPane.showMessageDialog(null, "The requested medicine will be supplied", "Information", JOptionPane.INFORMATION_MESSAGE);
            } else {
                request.setStatus(Status.DENIED);
                request.setMessage("The requested medicine does not exist or the requested quantity cannot be supplied");
                JOptionPane.showMessageDialog(null, "The requested medicine does not exist or the requested quantity cannot be supplied", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblMedicineList;
    private javax.swing.JTable tblRequestingMedicine;
    // End of variables declaration//GEN-END:variables

    private void populateMedicineTable() {
        DefaultTableModel model = (DefaultTableModel) tblMedicineList.getModel();

        model.setRowCount(0);
        for (Medicine medicine : system.getMedicineCatalog().getMedicineList()) {
            Object[] row = new Object[3];
            row[0] = medicine;
            row[1] = medicine.getForm();
            row[2] = medicine.getQuantity();

            model.addRow(row);
        }
    }

    private void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) tblRequestingMedicine.getModel();

        model.setRowCount(0);
        for (WorkRequest request : enterprise.getWorkQueue().getWorkQueue()) {
            Object[] row = new Object[5];
            row[0] = ((PurchaseOrderWorkRequest) request).getMedicine();
            row[1] = request.getSender() == null ? null : request.getSender();
            row[2] = request.getReceiver() == null ? null : request.getReceiver();
            row[3] = request.getStatus();
            row[4] = request;

            model.addRow(row);
        }
    }
}
