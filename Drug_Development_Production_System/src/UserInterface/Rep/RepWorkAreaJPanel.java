/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Rep;

import Business.Ecosystem;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ClinicWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author joseph antony
 */
public class RepWorkAreaJPanel extends javax.swing.JPanel {

    public JPanel userProcessContainer;
    public UserAccount account;
    public Organization organization;
    public Ecosystem system;

    /**
     * Creates new form LabAssistantWorkArea
     */
    public RepWorkAreaJPanel(JPanel userProcessContainer, Organization organization, UserAccount account, Ecosystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.account = account;
        this.system = system;        
        for(WorkRequest request:organization.getWorkQueue().getWorkQueue()){
            if(request.getStatus() == WorkRequest.Status.TRIALOVERFAILURE)
                request.setStatus(WorkRequest.Status.TESTFAILED);
        }
        populateWorkQueue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkQueue = new javax.swing.JTable();
        btnReportToAdmin = new javax.swing.JButton();
        btnFindDoctor = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtMessagefield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 153));

        tblWorkQueue.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblWorkQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug", "Sender", "Receiver", "Status", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkQueue);
        if (tblWorkQueue.getColumnModel().getColumnCount() > 0) {
            tblWorkQueue.getColumnModel().getColumn(0).setResizable(false);
            tblWorkQueue.getColumnModel().getColumn(1).setResizable(false);
            tblWorkQueue.getColumnModel().getColumn(2).setResizable(false);
            tblWorkQueue.getColumnModel().getColumn(4).setResizable(false);
        }

        btnReportToAdmin.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnReportToAdmin.setText("Report To Admin");
        btnReportToAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportToAdminActionPerformed(evt);
            }
        });

        btnFindDoctor.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnFindDoctor.setText("Find Doctor");
        btnFindDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindDoctorActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N
        jLabel1.setText("RepresentativeWork Area");

        txtMessagefield.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Message :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("Drug Details: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(603, 603, 603)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addComponent(jLabel2)
                                    .addGap(83, 83, 83)
                                    .addComponent(txtMessagefield, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnReportToAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnFindDoctor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(519, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel1)
                .addGap(142, 142, 142)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReportToAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMessagefield, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85)
                .addComponent(btnFindDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(292, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnReportToAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportToAdminActionPerformed
        int selectedRow = tblWorkQueue.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request to process", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        WorkRequest request = (WorkRequest) tblWorkQueue.getValueAt(selectedRow, 4);
        if (request.getStatus() == WorkRequest.Status.TRIALOVERSUCCESS) {
            request.setMessage(txtMessagefield.getText());
            request.setSender(account);
            request.setReceiver(null);
            request.setStatus(WorkRequest.Status.APPROVED);
            JOptionPane.showMessageDialog(null, "The succesful test results have been submitted to the organization admin", "information", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a successful request to approve", "Error", JOptionPane.ERROR_MESSAGE);
        }

        populateWorkQueue();
        txtMessagefield.setText("");
    }//GEN-LAST:event_btnReportToAdminActionPerformed

    private void btnFindDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindDoctorActionPerformed
        int selectedRow = tblWorkQueue.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request to process", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        WorkRequest request = (WorkRequest) tblWorkQueue.getValueAt(selectedRow, 4);
        if (request.getStatus() == WorkRequest.Status.INPROCESS || request.getStatus() == WorkRequest.Status.TOTRIALS) {
            request.setReceiver(account);
            account.getWorkQueue().getWorkQueue().add(request);
            FindDoctorsJPanel approvalJPanel = new FindDoctorsJPanel(request, account, userProcessContainer, system);
            userProcessContainer.add("approvalJPanel", approvalJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a request in process to send it to doctors", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnFindDoctorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFindDoctor;
    private javax.swing.JButton btnReportToAdmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblWorkQueue;
    private javax.swing.JTextField txtMessagefield;
    // End of variables declaration//GEN-END:variables

    public void populateWorkQueue() {
        DefaultTableModel model = (DefaultTableModel) tblWorkQueue.getModel();

        model.setRowCount(0);
        for (WorkRequest request : organization.getWorkQueue().getWorkQueue()) {
            Object[] row = new Object[5];
            row[0] = ((ClinicWorkRequest) request).getDrug();
            row[1] = request.getSender() == null ? null : request.getSender();
            row[2] = request.getReceiver() == null ? null : request.getReceiver();
            row[3] = request.getStatus();
            row[4] = request;

            model.addRow(row);
        }
    }
}
