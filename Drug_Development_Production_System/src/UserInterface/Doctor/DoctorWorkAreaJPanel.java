/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Doctor;

import Business.Ecosystem;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ClinicWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author joseph antony
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    public JPanel userProcessContainer;
    public UserAccount account;
    public Ecosystem system;

    /**
     * Creates new form LabAssistantWorkArea
     */

    public DoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Ecosystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.system = system;
        populateWorkQueue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkQueue = new javax.swing.JTable();
        btnAddFindings = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnDenyStudy = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 153));

        tblWorkQueue.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tblWorkQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug", "Sender", "Receiver", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkQueue);
        if (tblWorkQueue.getColumnModel().getColumnCount() > 0) {
            tblWorkQueue.getColumnModel().getColumn(0).setResizable(false);
            tblWorkQueue.getColumnModel().getColumn(1).setResizable(false);
            tblWorkQueue.getColumnModel().getColumn(2).setResizable(false);
            tblWorkQueue.getColumnModel().getColumn(4).setResizable(false);
        }

        btnAddFindings.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnAddFindings.setText("Add Findings");
        btnAddFindings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFindingsActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 204, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N
        jLabel1.setText("Doctor Work Area");

        btnDenyStudy.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnDenyStudy.setText("Deny Study");
        btnDenyStudy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDenyStudyActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Work Queue");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(590, 590, 590)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnDenyStudy, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(340, 340, 340)
                                    .addComponent(btnAddFindings, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(519, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddFindings, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(btnDenyStudy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(296, 296, 296))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddFindingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFindingsActionPerformed
        int selectedRow = tblWorkQueue.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request to view patients", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        WorkRequest request = (WorkRequest) tblWorkQueue.getValueAt(selectedRow, 4);
        if (request.getStatus() == WorkRequest.Status.TOTRIALS) {
            PatientRecordsJPanel approvalJPanel = new PatientRecordsJPanel(request, account, userProcessContainer, system);
            userProcessContainer.add("approvalJPanel", approvalJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a request that has not been denied yet", "Error", JOptionPane.ERROR_MESSAGE);
        }

        populateWorkQueue();
    }//GEN-LAST:event_btnAddFindingsActionPerformed

    private void btnDenyStudyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDenyStudyActionPerformed
        int selectedRow = tblWorkQueue.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request to deny", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) tblWorkQueue.getValueAt(selectedRow, 4);
        if (request.getStatus() == WorkRequest.Status.TOTRIALS) {
            request.setStatus(WorkRequest.Status.TRIALOVERFAILURE);
        }
        JOptionPane.showMessageDialog(null, "The request has been denied", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnDenyStudyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFindings;
    private javax.swing.JButton btnDenyStudy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblWorkQueue;
    // End of variables declaration//GEN-END:variables

    public void populateWorkQueue() {
        DefaultTableModel model = (DefaultTableModel) tblWorkQueue.getModel();

        model.setRowCount(0);
        for (WorkRequest request : account.getWorkQueue().getWorkQueue()) {
            Object[] row = new Object[5];
            row[0] = ((ClinicWorkRequest) request).getDrug();
            row[1] = request.getSender() == null ? null : request.getSender();
            row[2] = request.getReceiver() == null ? null : request.getReceiver();
            row[3] = request.getStatus();
            row[4] = request;

            model.addRow(row);
        }
    }
}
