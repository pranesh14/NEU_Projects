/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Analysis;

import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.WorkQueue.WorkRequest;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;


/**
 *
 * @author joseph antony
 */
public class PassOrFailJPanel extends javax.swing.JPanel {

    public JPanel userProcessContainer;
    public Ecosystem system;
    public Network network;
    public Enterprise enterprise;
    /**
     * Creates new form PassOrFail
     */
    public PassOrFailJPanel(JPanel userProcessContainer, Ecosystem system, Network network, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.network = network;
        this.enterprise = enterprise;        
        createchart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dashboardpanel = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 153));

        javax.swing.GroupLayout dashboardpanelLayout = new javax.swing.GroupLayout(dashboardpanel);
        dashboardpanel.setLayout(dashboardpanelLayout);
        dashboardpanelLayout.setHorizontalGroup(
            dashboardpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        dashboardpanelLayout.setVerticalGroup(
            dashboardpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
        );

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboardpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack)
                .addGap(0, 339, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dashboardpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JPanel dashboardpanel;
    // End of variables declaration//GEN-END:variables

    private void createchart() {
        int successcount = 0;
        int failedcount = 0;
        
        DefaultPieDataset barchartdata = new DefaultPieDataset();
        
        if(system == null && enterprise == null){
            for(Enterprise ent: network.getEnterpriseDirectory().getEnterpriseList()){
                for(WorkRequest request: ent.getWorkQueue().getWorkQueue()){
                    if(request.getStatus() == WorkRequest.Status.ENTERPRISE2ADMINAPPROVED || request.getStatus() == WorkRequest.Status.ORGANIZATION3ADMINAPPROVED)
                        successcount++;
                    else if(request.getStatus() == WorkRequest.Status.TESTFAILED)
                        failedcount++;
                }
            }
        }
        else if(network == null && enterprise == null){
            for(Network net: system.getNetworkList()){
                for(Enterprise ent: net.getEnterpriseDirectory().getEnterpriseList()){
                    for(WorkRequest request: ent.getWorkQueue().getWorkQueue()){
                        if(request.getStatus() == WorkRequest.Status.ENTERPRISE2ADMINAPPROVED || request.getStatus() == WorkRequest.Status.ORGANIZATION3ADMINAPPROVED)
                            successcount++;
                        else if(request.getStatus() == WorkRequest.Status.TESTFAILED)
                            failedcount++;
                    }
                }
            }
        }
        else{
            for(WorkRequest request: enterprise.getWorkQueue().getWorkQueue()){
                if(request.getStatus() == WorkRequest.Status.ENTERPRISE2ADMINAPPROVED || request.getStatus() == WorkRequest.Status.ORGANIZATION3ADMINAPPROVED)
                    successcount++;
                else if(request.getStatus() == WorkRequest.Status.TESTFAILED)
                    failedcount++;
            }
        }
        
        barchartdata.setValue( "Successful Trials",new Double(successcount));
        barchartdata.setValue("Failed trials",new Double(failedcount));

        JFreeChart pieChart = ChartFactory.createPieChart("Successful versus failed trials",barchartdata, false, true, false);
        final PiePlot plot=(PiePlot) pieChart.getPlot();
        ChartPanel barPanel = new ChartPanel(pieChart);

        dashboardpanel.removeAll();
        dashboardpanel.setLayout(new java.awt.BorderLayout());
        dashboardpanel.add(barPanel, BorderLayout.CENTER);
        dashboardpanel.validate();
        
    }

}
